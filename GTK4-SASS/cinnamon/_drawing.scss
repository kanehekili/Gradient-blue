// Drawing mixins

// Entries

@mixin entry($t, $dark:false) {
//
// Entries drawing function
//

  @if $t==normal {
    color: $text_color;
    background-color: $editor_bg_color;
    border: 1px solid $borders_color;
    box-shadow: inset 0 2px 4px transparentize($editor_bg_color, 0.95);
  }

  @if $t==focus {
    color: $fg_color;
    background-color: $editor_bg_color;
    border: 1px solid $selected_fg_color;
    box-shadow: inset 0 2px 4px transparentize($editor_bg_color, 0.95);
  }

  @if $t==insensitive {
    color: $insensitive_fg_color;
    background-color: mix($editor_bg_color, $bg_color, 55%);
    border-color: 1px solid mix($borders_color, $bg_color, 55%);
    box-shadow: inset 0 2px 4px transparentize(mix($editor_bg_color, $bg_color, 55%), 0.95);
  }

  @if $t==osd {
    color: $text_color;
    background-color: darken($editor_bg_color,5%);
    border: 1px solid $borders_color;
    box-shadow: inset 0 2px 4px transparentize(black, 0.95);
  }

  @if $t==osd-focus {
    color:$fg_color;
    background-color: darken($editor_bg_color,5%);
    border: 1px solid $selected_bg_color;
    box-shadow: inset 0 2px 4px transparentize(black, 0.95);
  }

  @if $t==osd-insensitive {
    color: $insensitive_fg_color;
    background-color: transparentize($editor_bg_color, 0.15);
    border: 1px solid $borders_color;
    box-shadow: inset 0 2px 4px transparentize(black, 0.95);
  }
}

// Buttons

@mixin button($t) {
//
// Button drawing function
//
  border-radius:4px;
  @if $t==normal {
  //
  // normal button
  //
    color: $fg_color;
    background-gradient-direction: vertical;
    background-gradient-start: $buttonHi;
    background-gradient-end: $buttonLow;
    border: 1px solid $borders_color;
    box-shadow: inset 0 2px 4px transparentize($borders_color, 0.95);
  }

  @else if $t==focus {
  //
  // focused button
  //
    color: lighten($fg_color,20%);
    border: 1px solid $selected_bg_color;
    box-shadow: inset 0 2px 4px transparentize($borders_color, 0.95);
  }

  @else if $t==focus-hover {
  //
  // focused button
  //
    color: lighten($fg_color,20%);
    border: 1px solid $selected_bg_color;
    box-shadow: inset 0 2px 4px transparentize($borders_color, 0.95);
  }

  @else if $t==hover {
  //
  // hovered button
  //
    color: $fg_color;
    background-gradient-direction: vertical;
    background-gradient-start: mix($buttonHi,$selected_bg_color,90%);
    background-gradient-end: mix($buttonLow,$selected_bg_color,90%);
    border: 1px solid $borders_color;
    box-shadow: inset 0 2px 4px transparentize(lighten($borders_color, 5%), 0.95);
  }

  @else if $t==active {
  //
  // pushed button
  //
    color: $selected_fg_color;
    //background-color: $selected_bg_color;
    background-gradient-direction: vertical;
    @if $variant == 'light' {
       background-gradient-start: $buttonLow;
    }
    @else {
       background-gradient-start:shade($buttonLow,1.3);
    }    
    background-gradient-end: $buttonHi;

    border: 1px solid $selected_bg_color;
    //box-shadow: inset 0 2px 4px $selected_bg_color;
  }

  @else if $t==insensitive {
  //
  // insensitive button
  //
    color: $insensitive_fg_color;
    border: 1px solid transparentize($borders_color, 0.45);
    box-shadow: inset 0 2px 4px transparentize($borders_color, 0.95);
  }

  @else if $t==osd {
  //
  // normal osd button
  //
    color: $fg_color;
    border: 1px solid $borders_color;
    background-gradient-direction: vertical;
    background-gradient-start: $buttonHi;
    background-gradient-end: $buttonLow;
  }

  @else if $t==osd-hover {
  //
  // active osd button
  //
    color: $fg_color;
    border: 1px solid $selected_bg_color;
    background-color: opacify(lighten($borders_color, 7%), 0.1);
  }

  @else if $t==osd-active {
  //
  // active osd button
  //
    color: $selected_fg_color;
    border: 1px solid $borders_color;
    background-color: $selected_bg_color;
  }
}
